/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package userinterface;

import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import operation.*;

/**
 *
 * @author Juan Miguel
 */
public class InventoryDisplay extends javax.swing.JFrame {
    private String[] Test = {"A", "b", "c", "d", "e", "f", "g"};
    private ArraysDataStruct productList;
    TableRowSorter<TableModel> sorter;
    
    DefaultTableModel inventoryTableModel = new DefaultTableModel(new Object [][] {},
        new String [] { //Column Titles
            "Brand", "Device Type", "Model", "Price(â‚±)", "Quantity", "Status", "ReferenceNo."
        }) 
        {       
            public Class getColumnClass(int column) {   //Specify the column class to use for sorting, etc.
                switch(column) {
                    case 4: case 6:     // "Model", "Qty", RefNo" class is integer
                        return Integer.class;
                    case 3:     //"Price" class is double
                        return Double.class;
                    default:    //Everything else is string
                        return String.class;
                }
            }
        };
    /**
     * Creates new form inventoryDisplay
     */
    public InventoryDisplay(ArraysDataStruct productList) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                initComponents();
                formatTable();
                //setRowFilter("(Cellphone)");
            }
        });
        this.productList = productList;
    }
    
    public void addTableRow(Object objArr[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                inventoryTableModel.addRow(objArr);
            }
        });
    }
    
    public void formatTable() {
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
        for(int i=0; i<inventoryTable.getColumnCount(); i++) {     //make all cells left aligned
            inventoryTable.getColumnModel().getColumn(i).setCellRenderer(rightRenderer);
        }
        sorter = new TableRowSorter<>(inventoryTableModel);
        inventoryTable.setRowSorter(sorter);
    }
    
    private void setRowFilter(String regexFilter, int column) {//Finifilter out yung  string regex sa column na input
        RowFilter<TableModel, Object> rf = null;
        //If current expression doesn't parse, don't update.
        try {
            rf = RowFilter.regexFilter(regexFilter, 1);
        } catch (java.util.regex.PatternSyntaxException e) {
            return;
        }
        sorter.setRowFilter(rf);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inventoryTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        deviceFilterTextF = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inventory List");
        setResizable(false);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setRequestFocusEnabled(false);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setPreferredSize(new java.awt.Dimension(700, 400));

        inventoryTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        inventoryTable.setModel(inventoryTableModel);
        inventoryTable.setPreferredSize(new java.awt.Dimension(700, 350));
        inventoryTable.setShowGrid(true);
        jScrollPane1.setViewportView(inventoryTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Filter By Device Type:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 7, 3, 5);
        jPanel2.add(jLabel1, gridBagConstraints);

        deviceFilterTextF.setToolTipText("");
        deviceFilterTextF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deviceFilterTextFActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(3, 7, 7, 5);
        jPanel2.add(deviceFilterTextF, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel1.add(jPanel2, gridBagConstraints);

        getContentPane().add(jPanel1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void deviceFilterTextFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deviceFilterTextFActionPerformed
        setRowFilter("(" + deviceFilterTextF.getText() + ")", 1);
    }//GEN-LAST:event_deviceFilterTextFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InventoryDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InventoryDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InventoryDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InventoryDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InventoryDisplay(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField deviceFilterTextF;
    private javax.swing.JTable inventoryTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
